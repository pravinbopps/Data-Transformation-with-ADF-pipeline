#Sample Pipeline script given below- Amend accordingly to your requirement

{
    "name": "Test Pipeline",
    "properties": {
        "description": "This pipeline fetches the data from somewhere for enrichment",
        "activities": [
            {
                "type": "HDInsightSpark",
                "typeProperties": {
                    "rootPath": "data-enrichment\\code",
                    "entryFilePath": "test.py",
                    "arguments": [
                        "prod",
                        "$$Text.Format('{0:yyyy-MM-dd}',SliceStart)"
                    ],
                    "getDebugInfo": "Always"
                },
                "outputs": [
                    {
                        "name": "ProcessedData"
                    }
                ],
                "policy": {
                    "timeout": "06:00:00",
                    "concurrency": 1,
                    "retry": 1
                },
                "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                },
                "name": "SparkActivity",
                "linkedServiceName": "HDInsightLinkedService"
            },
            {
                "type": "Copy",
                "typeProperties": {
                    "source": {
                        "type": "BlobSource",
                        "recursive": true
                    },
                    "sink": {
                        "type": "SqlDWSink",
                        "sqlWriterCleanupScript": "truncate table STG.table",
                        "writeBatchSize": 0,
                        "writeBatchTimeout": "00:00:00"
                    }
                },
                "inputs": [
                    {
                        "name": "ProcessedmyData"
                    }
                ],
                "outputs": [
                    {
                        "name": "Mytemp"
                    }
                ],
                "policy": {
                    "timeout": "1.00:00:00",
                    "concurrency": 1,
                    "retry": 3
                },
                "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                },
                "name": "CopyActivityTemplate"
            },
            {
                "type": "SqlServerStoredProcedure",
                "typeProperties": {
                    "storedProcedureName": "DWH.LOAD_DATA",
                    "storedProcedureParameters": {}
                },
                "inputs": [
                    {
                        "name": "DatasetTemp"
                    }
                ],
                "outputs": [
                    {
                        "name": "SqlDatasetDWH"
                    }
                ],
                "policy": {
                    "timeout": "15:00:00",
                    "concurrency": 1,
                    "retry": 3
                },
                "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                },
                "name": "StoredProcedureActivityTemplate1"
            }
        ],
        "start": "2018-05-15T20:00:00Z",
        "end": "2099-12-28T20:00:00Z",
        "isPaused": false,
        "hubName": "My_hub",
        "pipelineMode": "Scheduled"
    }
}



